<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAQAEBAAAAEACABoBQAARgAAABgYAAABAAgAyAYAAK4FAAAgIAAAAQAIAKgIAAB2DAAAMDAAAAEA
        CACoDgAAHhUAACgAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEAAAABAAAAAAAALCQcADQo
        HQAoKCgALi0uACgqPAAxLDwAJTQwACo9MgAnNTsAMjIyADQzNAAxNTUAODU/ADk6OgA8PT0ASDUkAGRG
        LAAoJEAANC1JACYbYQAsRUEAKE1DADVZSgArV1AAJ2VZADNhUwBBQUEASkpKAE9PTwBHUEsAUlJSAFdX
        VwBpXFEAQ25aAHJhTABoY14Ab2NdAH1rVgBnZ2cAampqAHNvaQBxcXEAdnZ2AHh4eACEWjQAjWY/ALt0
        MQCNZEIAj3JaAKJ8VAA8jnkASZB3AOSHMAC4jVkAuZNfAISBfgDMk08AyZhbAN6eXADqmEoA8JxLAPyg
        RwDzoksA/qdPAP+qUQD/rVEA9KNbANGwcgDuq2sA869mAP25YgD+vG0A8b9wADcxigAhFqAAJCCmAHt5
        hQCBgYEAhISEAIiIiACNjY0Am5SKAJGRkQCampoAnp6eAKKckQCjo6MArq6uAMCligDwwoQA98uFAP3K
        gADKysoA0NDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAGw0TCw4bHyoAAAAAAAAAMRxKSxUzCRQGCw8nAAAAAC8wJU0eFwVMEjQZGhgfAAA1
        Q0UyIRwOBAQIByIWCwAAPkBIXFs3Ix8BAhARLS4AAFpBQUdJRFZVOCY6RjwAAAAAWTs/NlJXTk4pOT0A
        AAAAAAAAAFNVLE4sJQAAAAAAAAAAAFNTKiwsKgAAAAAAAAAAAAAAKh8qKAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAF0AAAAAAAAAAAAAAAAAAABeAAAAAAAAAAAAAAAAAAAAU1gAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP//AADAPwAAgAcAAIABAACAAQAAgAEAAIADAADABwAA+B8AAPA/AAD4fwAA//8AAPf/
        AAD3/wAA8/8AAP//AAAoAAAAGAAAADAAAAABAAgAAAAAAEACAAAAAAAAAAAAAAABAAAAAQAAAAAAAAQE
        BAA0JRYAOSgYACUlJQAlKCcAJywvACopKgAqLCwALSwtADErJQArJzIALCo0ACokPAAqKTgAIjMwACUy
        MQAtNjUAKD0wADExMQA1NjYAODUyADs5NwAxOTgAOTk5AEozHwAkRj4AWUY0AGJCJgB8VjcALB1UACoZ
        WgAlIEYALiZGADEqQwA3M0YAPjxDACAWYgAfX1EAHVtVACdHQwAgTEYAMURDADBIQQApVEEAKlxaADtm
        TQArY1IAImRcACh6YwBDQ0MARUVFAEZJSABKSkoATU9PAFVOSABdVU4AUlJSAFVVVQBZWVkAXV1dAEV4
        WgB0Y08AZGRkAGpqagB0bmcAcnJyAHV1dQB5eXkAfHx8AIBWMACRXjAAoWk3ALp3NgDFdCcAx3szAIRg
        QACJY0EAkG9HAI5xSwCbdUsAj29QAKh/TQCJdmIAgXx2AId9dADEf0IAM4txAE2RbwDoijQA4Is4APeV
        OgCyg1EAs4BUALOQWwCYgmcAso9sAKWPdwDBhUoAxYRPANeTSQDZmVAA0p5cANSeXwDfnVkA8ZhHAPSf
        RwDynkwA8J1XANuhVAD+okgA+aBOAP+nTAD/qEwA8aJVAPuiUADxrFYA/q1SAP2uVADxq18A/rBbAP2w
        XQDHmmEAwql1AOOgZADvr2kA86lqAPqwZgD+u2QA/LRqAOq1dgD+v3AA/b53AOXCfQD7xHMA9Ml+AP7J
        fQAeGZcAJA+TADEqkQAkG6gAIx+9AGFemgB/foAAKiTFAF2hgABlqYoAd76eAIKCggCGhoYAiYmJAJKL
        hACalo8AkZGRAJSTkQCUlJQAm5mUAJiXmQCZmZkAn5+fALCZhwChoaEApKSkAKmpqQCtra0AwKKCANOu
        gADOsIkA+sSAAPDIhAD/yoMA/NCGAPnTiwDExMQAyMjIANHR0QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlwkJDR4LCQkJCQkU
        OkUAAAAAAAAAAAAATBMkjI0fGjEnCSEiFBQJNUUAAAAAAACgRzePjosjLpMnIJCKCygwKhQXNQAAAABd
        SmMdOJ1DNCsTDoklBliSJy9XLRMAAABJWWx+fE04PzoyFAkJBRIsED2RKQkAAABaW3OBhKiCUBsWGBMF
        BQUFBQUQBQpUAABybm54hIirrKl6U0QVAgMZHEZIVksAAACnqm5xdYCGh4V7nJ+WQT5SZ31/aWEAAAAA
        pnh2dnZ0bV6YopminUVPZ3dvXQAAAAAAAAClaGlkX5mjn0U/lkNOZWtjAAAAAAAAAAAAAABUm6KiPEWW
        lTpRYAAAAAAAAAAAAAAAAACVm6I6lpaWPEMAAAAAAAAAAAAAAAAAAKKWljqVlZU6QwAAAAAAAAAAAAAA
        AAAAAACjQDxAQzVFAAAAAAAAAAAAAAAAAAAAAACfPDIyRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAK4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wD///8AwAD/AMAAHwCAAAcAgAADAIAA
        AwCAAAEAgAADAIAAAwDAAAcA8AAPAP4APwD+AP8A/AH/AP4D/wD+D/8A////AP3//wD9//8A/v//AP7/
        /wD+//8A////ACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAEAAAABAAAAAAAABwcHAA8P
        DwAQEBAAHx8fACIgHgA9KBUANSkeADgqGwAhISEAJSUlACcqKgAlLioAJy0tACkpKQAqKS0AKi0tAC0t
        LQAmMC8AODEqAD82LQAqJzUAKyozAC4qNQAqLzYAKSM6ACkjPAAwLDsAJjY2AC8yMgAnPDAAMTExADIx
        NAA0NTUAMTk5ADA/PwA0Pz8AOjo6ADs8PAA9PT0AQiwXAE80GwBZPiIAJUw2ACBDPABEQDsASEQ+AGZD
        JABkRSsAZUgtAGxKLQBvTi8AflIqAHJOMAB1UTMAe1YwAB8aWgAwHl0ALSFJADQrSQAZEHIAGBJ7AC0Y
        ZgAlFXIAKRRwAB5NSwAgRkMALEREACJKSQAhT04AL09OADVCQQAhUUQAIllMADZXQwAtVVQAG29cACZk
        TgAya0kAJ2JQABZyaQBAQEAARUVFAElEQABHSEcASUlJAE1NTQBPTFYAUlJSAFZWVgBZWVkAXV1dAGte
        SwByXkYAcl1IAGdeUQBAdVMAamBUAGxiVgB7aVoAYWFhAGdnZwBra2sAZ2JzAG9vcABxcXEAdXV1AHl5
        eQB9fX0AoV8eAIFbOQCwaiYAoGg1AMl1IQDVfy8AyH0xAMF/OwDAez4Al3JGAKx7SACtfk0AhH53AD2A
        XQAYgXIAKYBjADqGYwA+hmMAOIdoACCLcgBIimMATpFoAEaWcwDehi4A3IY4AOOJMgDnijQA7YwyAPSS
        OQD4lDgA/Jg9AJuAWwC/gE0AuItOALKEUQC3jlYAvY1UAJeHdgCZinkAr45sAK+WaQC9kGoAopF9AK2R
        eACynnQAuph1AMCIRwDKkksAyIdRAMCJUADOnF4A3ZpWANaSWQDomUUA4ZJNAOCaTwD0nEIA/Z9GAPKX
        SADzn00A+J5NAOGfUADrmlQA7ppVANigWQD+okYA/qJJAP+lSgD/qU4A5aJdAO+oWwD6oVAA86lSAP2s
        UwD+sVYA8bJdAPqzWgDHmm0A06RiANmhYADeomcAyKN/ANu8ewDkr2IA7K5nAPGlZQD6rmEA+q5mAPCo
        bAD/sWAA/7RgAP2yZAD+u2UA97NrAP+6agD+um4A77p4APq1cAD6vHkA+L19AP/AcQD9xXMA/sF3AP3H
        fwD+yHoA+8x/ABwLjQAjC4sAIAmTABQNtgBzao8ADw/GACMjxAAqKcIALyzAADs77QCCgoIAiYmJAI2N
        jQCRkZEAlpSSAJWVlQCVk50AmZmZAJ+fnwCum4sAoaGhAKWlpQCsrKwAsbGxAL6+vgDBoYEA1rKJAIvU
        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
        cwB8fHwApl4TALFlFgCHVScAlFohAJtnOQCaaTwApmUmAKpnJQCsaiwAsnIsAKNrOgCsdT8At3o7AMl1
        IQDHdikAwHotAMx9KQDDezQAzH01AMN7OwCPa0AAjXBIAJV4UwCkeUcAun1IAIJ8dAA+gFMAN4BZABmB
        bAAbgXIAFIJ4ABOKfQAZiH8AQ4tcAE6MZABMkWIAVZ9vAF+dfABfpXMAZa9+ANqBKADXhTMA2oIxAOKG
        LwDojDUA75Y+APSTOgC2hUkAoIBdALWIUwC/mVsAjoBsAJqEZwCZjngArYdoAKWIaAC1imYAvoxjALuU
        ZgCxkncAzoZEAMWETgDXjUEAzJRMANeUSgDFilIAxotbANKOVwDLllcA3JtSANyUWgDfnV0A5ZZIAPib
        RgDsm1UAzqBaAN2jWQDrok4A/aVKAOqnWAD7qVUA/LFZANeWZADlnmQAyatuANqjZADHp3cA1q9zANm5
        eADrp2YA9qtjAPu2agDnunYA+bl1AO3CeQD8xHkADgePAAYDnAATBpsAGgWbACYOgAAnDIgALhGBACYb
        lwANBKEAFhavAAkEsQAZGbQAYleOAAEBwwAeHMMADAzTACcn1QAxMekAOjrtAExM9ABVVfQAZaSAAHW2
        mACDg4MAioqKAJOQjQCOjpAAiYSaAJOTkwCYl5cAm5ubAKaUgQCioqIAqqqqALGxsQC4t7oAu7u7AMim
        gwCO0r4Aldq6AOnIhQD4yoQA+dKKAP7VkQCa59cAnerZAKTv4wDIyMgA0tLSAP/zwQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABrampfX11dW1tbXV1fYWFqauUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAGULCwsLCwsQEQsLCwsLCwsLCwsLCxpdawAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwLCwsL
        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
        AAAA8OUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG0AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaQAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwEAYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAYWoGbQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAOzqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////AAD8AAD///8AAPgAAAf//wAA+AAAAP//
        AADwAAAAD/8AAPAAAAAD/wAA4AAAAAB/AADgAAAAAA8AAMAAAAAADwAAwAAAAAAHAADAAAAAAAcAAMAA
        AAAABwAAwAAAAAAHAADAAAAAAAcAAMAAAAAABwAAwAAAAAAPAADAAAAAAB8AAOAAAAAAHwAA8AAAAAA/
        AAD4AAAAAH8AAP4AAAAA/wAA/8AAAAH/AAD//AAAA/8AAP/8AAA//wAA//gAAP//AAD/+AAB//8AAP/4
        AAP//wAA//gAB///AAD/+AAP//8AAP/8AB///wAA//wAP///AAD//AD///8AAP/5/////wAA//n/////
        AAD/+/////8AAP/7/////wAA//n/////AAD/+f////8AAP/5/////wAA//3/////AAD/+P////8AAP/4
        f////wAA//h/////AAD//P////8AAP///////wAA////////AAA=
</value>
  </data>
</root>